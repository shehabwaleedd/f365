"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-calendly";
exports.ids = ["vendor-chunks/react-calendly"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-calendly/dist/index.es.js":
/*!******************************************************!*\
  !*** ./node_modules/react-calendly/dist/index.es.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InlineWidget: () => (/* binding */ InlineWidget),\n/* harmony export */   PopupButton: () => (/* binding */ PopupButton),\n/* harmony export */   PopupModal: () => (/* binding */ Modal),\n/* harmony export */   PopupWidget: () => (/* binding */ PopupWidget),\n/* harmony export */   useCalendlyEventListener: () => (/* binding */ useCalendlyEventListener)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\ntypeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction styleInject(css, ref) {\n    if (ref === void 0) ref = {};\n    var insertAt = ref.insertAt;\n    if (!css || typeof document === \"undefined\") {\n        return;\n    }\n    var head = document.head || document.getElementsByTagName(\"head\")[0];\n    var style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    if (insertAt === \"top\") {\n        if (head.firstChild) {\n            head.insertBefore(style, head.firstChild);\n        } else {\n            head.appendChild(style);\n        }\n    } else {\n        head.appendChild(style);\n    }\n    if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        style.appendChild(document.createTextNode(css));\n    }\n}\nvar css_248z = \"/*\\n  code is extracted from Calendly's embed stylesheet: https://assets.calendly.com/assets/external/widget.css\\n*/\\n\\n.calendly-inline-widget,\\n.calendly-inline-widget *,\\n.calendly-badge-widget,\\n.calendly-badge-widget *,\\n.calendly-overlay,\\n.calendly-overlay * {\\n    font-size:16px;\\n    line-height:1.2em\\n}\\n\\n.calendly-inline-widget iframe,\\n.calendly-badge-widget iframe,\\n.calendly-overlay iframe {\\n    display:inline;\\n    width:100%;\\n    height:100%\\n}\\n\\n.calendly-popup-content {\\n    position:relative\\n}\\n\\n.calendly-popup-content.calendly-mobile {\\n    -webkit-overflow-scrolling:touch;\\n    overflow-y:auto\\n}\\n\\n.calendly-overlay {\\n    position:fixed;\\n    top:0;\\n    left:0;\\n    right:0;\\n    bottom:0;\\n    overflow:hidden;\\n    z-index:9999;\\n    background-color:#a5a5a5;\\n    background-color:rgba(31,31,31,0.4)\\n}\\n\\n.calendly-overlay .calendly-close-overlay {\\n    position:absolute;\\n    top:0;\\n    left:0;\\n    right:0;\\n    bottom:0\\n}\\n\\n.calendly-overlay .calendly-popup {\\n    box-sizing:border-box;\\n    position:absolute;\\n    top:50%;\\n    left:50%;\\n    -webkit-transform:translateY(-50%) translateX(-50%);\\n    transform:translateY(-50%) translateX(-50%);\\n    width:80%;\\n    min-width:900px;\\n    max-width:1000px;\\n    height:90%;\\n    max-height:680px\\n}\\n\\n@media (max-width: 975px) {\\n    .calendly-overlay .calendly-popup {\\n        position:fixed;\\n        top:50px;\\n        left:0;\\n        right:0;\\n        bottom:0;\\n        -webkit-transform:none;\\n        transform:none;\\n        width:100%;\\n        height:auto;\\n        min-width:0;\\n        max-height:none\\n    }\\n}\\n\\n.calendly-overlay .calendly-popup .calendly-popup-content {\\n    height:100%;\\n}\\n\\n.calendly-overlay .calendly-popup-close {\\n    position:absolute;\\n    top:25px;\\n    right:25px;\\n    color:#fff;\\n    width:19px;\\n    height:19px;\\n    cursor:pointer;\\n    background:url(https://assets.calendly.com/assets/external/close-icon.svg) no-repeat;\\n    background-size:contain\\n}\\n\\n@media (max-width: 975px) {\\n    .calendly-overlay .calendly-popup-close {\\n        top:15px;\\n        right:15px\\n    }\\n}\\n\\n.calendly-badge-widget {\\n    position:fixed;\\n    right:20px;\\n    bottom:15px;\\n    z-index:9998\\n}\\n\\n.calendly-badge-widget .calendly-badge-content {\\n    display:table-cell;\\n    width:auto;\\n    height:45px;\\n    padding:0 30px;\\n    border-radius:25px;\\n    box-shadow:rgba(0,0,0,0.25) 0 2px 5px;\\n    font-family:sans-serif;\\n    text-align:center;\\n    vertical-align:middle;\\n    font-weight:bold;\\n    font-size:14px;\\n    color:#fff;\\n    cursor:pointer\\n}\\n\\n.calendly-badge-widget .calendly-badge-content.calendly-white {\\n    color:#666a73\\n}\\n\\n.calendly-badge-widget .calendly-badge-content span {\\n    display:block;\\n    font-size:12px\\n}\\n\\n.calendly-spinner {\\n    position:absolute;\\n    top:50%;\\n    left:0;\\n    right:0;\\n    -webkit-transform:translateY(-50%);\\n    transform:translateY(-50%);\\n    text-align:center;\\n    z-index:-1\\n}\\n\\n.calendly-spinner>div {\\n    display:inline-block;\\n    width:18px;\\n    height:18px;\\n    background-color:#e1e1e1;\\n    border-radius:50%;\\n    vertical-align:middle;\\n    -webkit-animation:calendly-bouncedelay 1.4s infinite ease-in-out;\\n    animation:calendly-bouncedelay 1.4s infinite ease-in-out;\\n    -webkit-animation-fill-mode:both;\\n    animation-fill-mode:both\\n}\\n\\n.calendly-spinner .calendly-bounce1 {\\n    -webkit-animation-delay:-0.32s;\\n    animation-delay:-0.32s\\n}\\n\\n.calendly-spinner .calendly-bounce2 {\\n    -webkit-animation-delay:-0.16s;\\n    animation-delay:-0.16s\\n}\\n\\n@-webkit-keyframes calendly-bouncedelay {\\n    0%,80%,100% {\\n        -webkit-transform:scale(0);\\n        transform:scale(0)\\n    } \\n    \\n    40%{\\n        -webkit-transform:scale(1);\\n        transform:scale(1)\\n    }\\n}\\n\\n@keyframes calendly-bouncedelay{ \\n    0%,80%,100% {\\n        -webkit-transform:scale(0);\\n        transform:scale(0)\\n    }\\n    \\n    40% {\\n        -webkit-transform:scale(1);\\n        transform:scale(1)\\n    }\\n}\";\nstyleInject(css_248z);\nfunction sanitizeColorString(str) {\n    if (str.charAt(0) === \"#\") {\n        return str.slice(1);\n    }\n    return str;\n}\nfunction sanitizePageSettingsProps(props) {\n    if (props === null || props === void 0 ? void 0 : props.primaryColor) {\n        props.primaryColor = sanitizeColorString(props.primaryColor);\n    }\n    if (props === null || props === void 0 ? void 0 : props.textColor) {\n        props.textColor = sanitizeColorString(props.textColor);\n    }\n    if (props === null || props === void 0 ? void 0 : props.backgroundColor) {\n        props.backgroundColor = sanitizeColorString(props.backgroundColor);\n    }\n    return props;\n}\nvar CalendlyEvent;\n(function(CalendlyEvent) {\n    CalendlyEvent[\"PROFILE_PAGE_VIEWED\"] = \"calendly.profile_page_viewed\";\n    CalendlyEvent[\"EVENT_TYPE_VIEWED\"] = \"calendly.event_type_viewed\";\n    CalendlyEvent[\"DATE_AND_TIME_SELECTED\"] = \"calendly.date_and_time_selected\";\n    CalendlyEvent[\"EVENT_SCHEDULED\"] = \"calendly.event_scheduled\";\n})(CalendlyEvent || (CalendlyEvent = {}));\nvar formatCalendlyUrl = function(_a) {\n    var url = _a.url, _b = _a.prefill, prefill = _b === void 0 ? {} : _b, _c = _a.pageSettings, pageSettings = _c === void 0 ? {} : _c, _d = _a.utm, utm = _d === void 0 ? {} : _d, embedType = _a.embedType;\n    var sanitizedPageSettings = sanitizePageSettingsProps(pageSettings);\n    var backgroundColor = sanitizedPageSettings.backgroundColor, hideEventTypeDetails = sanitizedPageSettings.hideEventTypeDetails, hideLandingPageDetails = sanitizedPageSettings.hideLandingPageDetails, primaryColor = sanitizedPageSettings.primaryColor, textColor = sanitizedPageSettings.textColor, hideGdprBanner = sanitizedPageSettings.hideGdprBanner;\n    var customAnswers = prefill.customAnswers, date = prefill.date, email = prefill.email, firstName = prefill.firstName, guests = prefill.guests, lastName = prefill.lastName, location = prefill.location, smsReminderNumber = prefill.smsReminderNumber, name = prefill.name;\n    var utmCampaign = utm.utmCampaign, utmContent = utm.utmContent, utmMedium = utm.utmMedium, utmSource = utm.utmSource, utmTerm = utm.utmTerm, salesforce_uuid = utm.salesforce_uuid;\n    var queryStringIndex = url.indexOf(\"?\");\n    var hasQueryString = queryStringIndex > -1;\n    var queryString = url.slice(queryStringIndex + 1);\n    var baseUrl = hasQueryString ? url.slice(0, queryStringIndex) : url;\n    var updatedQueryString = [\n        hasQueryString ? queryString : null,\n        backgroundColor ? \"background_color=\".concat(backgroundColor) : null,\n        hideEventTypeDetails ? \"hide_event_type_details=1\" : null,\n        hideLandingPageDetails ? \"hide_landing_page_details=1\" : null,\n        primaryColor ? \"primary_color=\".concat(primaryColor) : null,\n        textColor ? \"text_color=\".concat(textColor) : null,\n        hideGdprBanner ? \"hide_gdpr_banner=1\" : null,\n        name ? \"name=\".concat(encodeURIComponent(name)) : null,\n        smsReminderNumber ? \"phone_number=\".concat(encodeURIComponent(smsReminderNumber)) : null,\n        location ? \"location=\".concat(encodeURIComponent(location)) : null,\n        firstName ? \"first_name=\".concat(encodeURIComponent(firstName)) : null,\n        lastName ? \"last_name=\".concat(encodeURIComponent(lastName)) : null,\n        guests ? \"guests=\".concat(guests.map(encodeURIComponent).join(\",\")) : null,\n        email ? \"email=\".concat(encodeURIComponent(email)) : null,\n        date && date instanceof Date ? \"date=\".concat(formatDate(date)) : null,\n        utmCampaign ? \"utm_campaign=\".concat(encodeURIComponent(utmCampaign)) : null,\n        utmContent ? \"utm_content=\".concat(encodeURIComponent(utmContent)) : null,\n        utmMedium ? \"utm_medium=\".concat(encodeURIComponent(utmMedium)) : null,\n        utmSource ? \"utm_source=\".concat(encodeURIComponent(utmSource)) : null,\n        utmTerm ? \"utm_term=\".concat(encodeURIComponent(utmTerm)) : null,\n        salesforce_uuid ? \"salesforce_uuid=\".concat(encodeURIComponent(salesforce_uuid)) : null,\n        embedType ? \"embed_type=\".concat(embedType) : null,\n        /*\n         * https://github.com/tcampb/react-calendly/pull/31\n         * embed_domain must be defined to receive messages from the Calendly iframe.\n         */ \"embed_domain=1\"\n    ].concat(customAnswers ? formatCustomAnswers(customAnswers) : []).filter(function(item) {\n        return item !== null;\n    }).join(\"&\");\n    return \"\".concat(baseUrl, \"?\").concat(updatedQueryString);\n};\nvar formatDate = function(d) {\n    var month = d.getMonth() + 1;\n    var day = d.getDate();\n    var year = d.getFullYear();\n    return [\n        year,\n        month < 10 ? \"0\".concat(month) : month,\n        day < 10 ? \"0\".concat(day) : day\n    ].join(\"-\");\n};\nvar CUSTOM_ANSWER_PATTERN = /^a\\d{1,2}$/;\nvar formatCustomAnswers = function(customAnswers) {\n    var customAnswersFiltered = Object.keys(customAnswers).filter(function(key) {\n        return key.match(CUSTOM_ANSWER_PATTERN);\n    });\n    if (!customAnswersFiltered.length) return [];\n    return customAnswersFiltered.map(function(key) {\n        return \"\".concat(key, \"=\").concat(encodeURIComponent(customAnswers[key]));\n    });\n};\nvar LoadingSpinner = /** @class */ function(_super) {\n    __extends(LoadingSpinner, _super);\n    function LoadingSpinner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LoadingSpinner.prototype.render = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-spinner\"\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-bounce1\"\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-bounce2\"\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-bounce3\"\n        }));\n    };\n    return LoadingSpinner;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar defaultStyles = {\n    minWidth: \"320px\",\n    height: \"630px\"\n};\nvar InlineWidget = /** @class */ function(_super) {\n    __extends(InlineWidget, _super);\n    function InlineWidget(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isLoading: true\n        };\n        _this.onLoad = _this.onLoad.bind(_this);\n        return _this;\n    }\n    InlineWidget.prototype.onLoad = function() {\n        this.setState({\n            isLoading: false\n        });\n    };\n    InlineWidget.prototype.render = function() {\n        var src = formatCalendlyUrl({\n            url: this.props.url,\n            pageSettings: this.props.pageSettings,\n            prefill: this.props.prefill,\n            utm: this.props.utm,\n            embedType: \"Inline\"\n        });\n        var LoadingSpinner$1 = this.props.LoadingSpinner || LoadingSpinner;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-inline-widget\",\n            style: this.props.styles || defaultStyles\n        }, this.state.isLoading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingSpinner$1, null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            width: \"100%\",\n            height: \"100%\",\n            frameBorder: \"0\",\n            title: this.props.iframeTitle || \"Calendly Scheduling Page\",\n            onLoad: this.onLoad,\n            src: src\n        }));\n    };\n    return InlineWidget;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar ModalContent = /** @class */ function(_super) {\n    __extends(ModalContent, _super);\n    function ModalContent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isLoading: true\n        };\n        _this.onLoad = _this.onLoad.bind(_this);\n        return _this;\n    }\n    ModalContent.prototype.onLoad = function() {\n        this.setState({\n            isLoading: false\n        });\n    };\n    ModalContent.prototype.render = function() {\n        var src = formatCalendlyUrl({\n            url: this.props.url,\n            pageSettings: this.props.pageSettings,\n            prefill: this.props.prefill,\n            utm: this.props.utm,\n            embedType: \"PopupWidget\"\n        });\n        var LoadingSpinner$1 = this.props.LoadingSpinner || LoadingSpinner;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, this.state.isLoading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingSpinner$1, null), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            width: \"100%\",\n            height: \"100%\",\n            frameBorder: \"0\",\n            title: this.props.iframeTitle || \"Calendly Scheduling Page\",\n            onLoad: this.onLoad,\n            src: src\n        }));\n    };\n    return ModalContent;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar Modal = function(props) {\n    if (!props.open) return null;\n    if (!props.rootElement) {\n        throw new Error(\"[react-calendly]: PopupModal rootElement property cannot be undefined\");\n    }\n    return /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"calendly-overlay\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        onClick: props.onModalClose,\n        className: \"calendly-close-overlay\"\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"calendly-popup\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"calendly-popup-content\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ModalContent, __assign({}, props)))), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        className: \"calendly-popup-close\",\n        onClick: props.onModalClose,\n        \"aria-label\": \"Close modal\",\n        style: {\n            display: \"block\",\n            border: \"none\",\n            padding: 0\n        }\n    })), props.rootElement);\n};\nvar PopupButton = /** @class */ function(_super) {\n    __extends(PopupButton, _super);\n    function PopupButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isOpen: false\n        };\n        _this.onClick = _this.onClick.bind(_this);\n        _this.onClose = _this.onClose.bind(_this);\n        return _this;\n    }\n    PopupButton.prototype.onClick = function(e) {\n        e.preventDefault();\n        this.setState({\n            isOpen: true\n        });\n    };\n    PopupButton.prototype.onClose = function(e) {\n        e.stopPropagation();\n        this.setState({\n            isOpen: false\n        });\n    };\n    PopupButton.prototype.render = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n            onClick: this.onClick,\n            style: this.props.styles || {},\n            className: this.props.className || \"\"\n        }, this.props.text), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Modal, __assign({}, this.props, {\n            open: this.state.isOpen,\n            onModalClose: this.onClose,\n            rootElement: this.props.rootElement\n        })));\n    };\n    return PopupButton;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar PopupWidget = /** @class */ function(_super) {\n    __extends(PopupWidget, _super);\n    function PopupWidget(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isOpen: false\n        };\n        _this.onClick = _this.onClick.bind(_this);\n        _this.onClose = _this.onClose.bind(_this);\n        return _this;\n    }\n    PopupWidget.prototype.onClick = function() {\n        this.setState({\n            isOpen: true\n        });\n    };\n    PopupWidget.prototype.onClose = function(e) {\n        e.stopPropagation();\n        this.setState({\n            isOpen: false\n        });\n    };\n    PopupWidget.prototype.render = function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-badge-widget\",\n            onClick: this.onClick\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            className: \"calendly-badge-content\",\n            style: {\n                background: this.props.color || \"#00a2ff\",\n                color: this.props.textColor || \"#ffffff\"\n            }\n        }, this.props.text || \"Schedule time with me\", this.props.branding && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \"powered by Calendly\")), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Modal, __assign({}, this.props, {\n            open: this.state.isOpen,\n            onModalClose: this.onClose,\n            rootElement: this.props.rootElement\n        })));\n    };\n    return PopupWidget;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar EVENT_NAME = \"message\";\nfunction useCalendlyEventListener(eventHandlers) {\n    var _a = eventHandlers || {}, onDateAndTimeSelected = _a.onDateAndTimeSelected, onEventScheduled = _a.onEventScheduled, onEventTypeViewed = _a.onEventTypeViewed, onProfilePageViewed = _a.onProfilePageViewed;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n        var onMessage = function(e) {\n            var eventName = e.data.event;\n            if (eventName === CalendlyEvent.DATE_AND_TIME_SELECTED) {\n                onDateAndTimeSelected && onDateAndTimeSelected(e);\n            } else if (eventName === CalendlyEvent.EVENT_SCHEDULED) {\n                onEventScheduled && onEventScheduled(e);\n            } else if (eventName === CalendlyEvent.EVENT_TYPE_VIEWED) {\n                onEventTypeViewed && onEventTypeViewed(e);\n            } else if (eventName === CalendlyEvent.PROFILE_PAGE_VIEWED) {\n                onProfilePageViewed && onProfilePageViewed(e);\n            }\n        };\n        window.addEventListener(EVENT_NAME, onMessage);\n        return function cleanup() {\n            window.removeEventListener(EVENT_NAME, onMessage);\n        };\n    }, [\n        eventHandlers\n    ]);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-calendly/dist/index.es.js\n");

/***/ })

};
;