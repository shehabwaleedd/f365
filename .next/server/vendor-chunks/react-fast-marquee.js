"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-fast-marquee";
exports.ids = ["vendor-chunks/react-fast-marquee"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-fast-marquee/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-fast-marquee/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* __next_internal_client_entry_do_not_use__  cjs */ \nfunction ___$insertStyle(css) {\n    if (!css || \"undefined\" === \"undefined\") {\n        return;\n    }\n    const style = document.createElement(\"style\");\n    style.setAttribute(\"type\", \"text/css\");\n    style.innerHTML = css;\n    document.head.appendChild(style);\n    return css;\n}\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === \"object\" && \"default\" in e ? e : {\n        \"default\": e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n___$insertStyle('.rfm-marquee-container {\\n  overflow-x: hidden;\\n  display: flex;\\n  flex-direction: row;\\n  position: relative;\\n  width: var(--width);\\n  transform: var(--transform);\\n}\\n.rfm-marquee-container:hover div {\\n  animation-play-state: var(--pause-on-hover);\\n}\\n.rfm-marquee-container:active div {\\n  animation-play-state: var(--pause-on-click);\\n}\\n\\n.rfm-overlay {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n}\\n.rfm-overlay::before, .rfm-overlay::after {\\n  background: linear-gradient(to right, var(--gradient-color), rgba(255, 255, 255, 0.1));\\n  content: \"\";\\n  height: 100%;\\n  position: absolute;\\n  width: var(--gradient-width);\\n  z-index: 2;\\n  pointer-events: none;\\n  touch-action: none;\\n}\\n.rfm-overlay::after {\\n  right: 0;\\n  top: 0;\\n  transform: rotateZ(180deg);\\n}\\n.rfm-overlay::before {\\n  left: 0;\\n  top: 0;\\n}\\n\\n.rfm-marquee {\\n  flex: 0 0 auto;\\n  min-width: var(--min-width);\\n  z-index: 1;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  animation: scroll var(--duration) linear var(--delay) var(--iteration-count);\\n  animation-play-state: var(--play);\\n  animation-delay: var(--delay);\\n  animation-direction: var(--direction);\\n}\\n@keyframes scroll {\\n  0% {\\n    transform: translateX(0%);\\n  }\\n  100% {\\n    transform: translateX(-100%);\\n  }\\n}\\n\\n.rfm-initial-child-container {\\n  flex: 0 0 auto;\\n  display: flex;\\n  min-width: auto;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n.rfm-child {\\n  transform: var(--transform);\\n}');\nconst Marquee = React.forwardRef(function Marquee({ style = {}, className = \"\", autoFill = false, play = true, pauseOnHover = false, pauseOnClick = false, direction = \"left\", speed = 50, delay = 0, loop = 0, gradient = false, gradientColor = \"white\", gradientWidth = 200, onFinish, onCycleComplete, onMount, children }, ref) {\n    // React Hooks\n    const [containerWidth, setContainerWidth] = React.useState(0);\n    const [marqueeWidth, setMarqueeWidth] = React.useState(0);\n    const [multiplier, setMultiplier] = React.useState(1);\n    const [isMounted, setIsMounted] = React.useState(false);\n    const rootRef = React.useRef(null);\n    const containerRef = ref || rootRef;\n    const marqueeRef = React.useRef(null);\n    // Calculate width of container and marquee and set multiplier\n    const calculateWidth = React.useCallback(()=>{\n        if (marqueeRef.current && containerRef.current) {\n            const containerRect = containerRef.current.getBoundingClientRect();\n            const marqueeRect = marqueeRef.current.getBoundingClientRect();\n            let containerWidth = containerRect.width;\n            let marqueeWidth = marqueeRect.width;\n            // Swap width and height if direction is up or down\n            if (direction === \"up\" || direction === \"down\") {\n                containerWidth = containerRect.height;\n                marqueeWidth = marqueeRect.height;\n            }\n            if (autoFill && containerWidth && marqueeWidth) {\n                setMultiplier(marqueeWidth < containerWidth ? Math.ceil(containerWidth / marqueeWidth) : 1);\n            } else {\n                setMultiplier(1);\n            }\n            setContainerWidth(containerWidth);\n            setMarqueeWidth(marqueeWidth);\n        }\n    }, [\n        autoFill,\n        containerRef,\n        direction\n    ]);\n    // Calculate width and multiplier on mount and on window resize\n    React.useEffect(()=>{\n        if (!isMounted) return;\n        calculateWidth();\n        if (marqueeRef.current && containerRef.current) {\n            const resizeObserver = new ResizeObserver(()=>calculateWidth());\n            resizeObserver.observe(containerRef.current);\n            resizeObserver.observe(marqueeRef.current);\n            return ()=>{\n                if (!resizeObserver) return;\n                resizeObserver.disconnect();\n            };\n        }\n    }, [\n        calculateWidth,\n        containerRef,\n        isMounted\n    ]);\n    // Recalculate width when children change\n    React.useEffect(()=>{\n        calculateWidth();\n    }, [\n        calculateWidth,\n        children\n    ]);\n    React.useEffect(()=>{\n        setIsMounted(true);\n    }, []);\n    // Runs the onMount callback, if it is a function, when Marquee is mounted.\n    React.useEffect(()=>{\n        if (typeof onMount === \"function\") {\n            onMount();\n        }\n    }, []);\n    // Animation duration\n    const duration = React.useMemo(()=>{\n        if (autoFill) {\n            return marqueeWidth * multiplier / speed;\n        } else {\n            return marqueeWidth < containerWidth ? containerWidth / speed : marqueeWidth / speed;\n        }\n    }, [\n        autoFill,\n        containerWidth,\n        marqueeWidth,\n        multiplier,\n        speed\n    ]);\n    const containerStyle = React.useMemo(()=>Object.assign(Object.assign({}, style), {\n            [\"--pause-on-hover\"]: !play || pauseOnHover ? \"paused\" : \"running\",\n            [\"--pause-on-click\"]: !play || pauseOnHover && !pauseOnClick || pauseOnClick ? \"paused\" : \"running\",\n            [\"--width\"]: direction === \"up\" || direction === \"down\" ? `100vh` : \"100%\",\n            [\"--transform\"]: direction === \"up\" ? \"rotate(-90deg)\" : direction === \"down\" ? \"rotate(90deg)\" : \"none\"\n        }), [\n        style,\n        play,\n        pauseOnHover,\n        pauseOnClick,\n        direction\n    ]);\n    const gradientStyle = React.useMemo(()=>({\n            [\"--gradient-color\"]: gradientColor,\n            [\"--gradient-width\"]: typeof gradientWidth === \"number\" ? `${gradientWidth}px` : gradientWidth\n        }), [\n        gradientColor,\n        gradientWidth\n    ]);\n    const marqueeStyle = React.useMemo(()=>({\n            [\"--play\"]: play ? \"running\" : \"paused\",\n            [\"--direction\"]: direction === \"left\" ? \"normal\" : \"reverse\",\n            [\"--duration\"]: `${duration}s`,\n            [\"--delay\"]: `${delay}s`,\n            [\"--iteration-count\"]: !!loop ? `${loop}` : \"infinite\",\n            [\"--min-width\"]: autoFill ? `auto` : \"100%\"\n        }), [\n        play,\n        direction,\n        duration,\n        delay,\n        loop,\n        autoFill\n    ]);\n    const childStyle = React.useMemo(()=>({\n            [\"--transform\"]: direction === \"up\" ? \"rotate(90deg)\" : direction === \"down\" ? \"rotate(-90deg)\" : \"none\"\n        }), [\n        direction\n    ]);\n    // Render {multiplier} number of children\n    const multiplyChildren = React.useCallback((multiplier)=>{\n        return [\n            ...Array(Number.isFinite(multiplier) && multiplier >= 0 ? multiplier : 0)\n        ].map((_, i)=>React__default[\"default\"].createElement(React.Fragment, {\n                key: i\n            }, React.Children.map(children, (child)=>{\n                return React__default[\"default\"].createElement(\"div\", {\n                    style: childStyle,\n                    className: \"rfm-child\"\n                }, child);\n            })));\n    }, [\n        childStyle,\n        children\n    ]);\n    return !isMounted ? null : React__default[\"default\"].createElement(\"div\", {\n        ref: containerRef,\n        style: containerStyle,\n        className: \"rfm-marquee-container \" + className\n    }, gradient && React__default[\"default\"].createElement(\"div\", {\n        style: gradientStyle,\n        className: \"rfm-overlay\"\n    }), React__default[\"default\"].createElement(\"div\", {\n        className: \"rfm-marquee\",\n        style: marqueeStyle,\n        onAnimationIteration: onCycleComplete,\n        onAnimationEnd: onFinish\n    }, React__default[\"default\"].createElement(\"div\", {\n        className: \"rfm-initial-child-container\",\n        ref: marqueeRef\n    }, React.Children.map(children, (child)=>{\n        return React__default[\"default\"].createElement(\"div\", {\n            style: childStyle,\n            className: \"rfm-child\"\n        }, child);\n    })), multiplyChildren(multiplier - 1)), React__default[\"default\"].createElement(\"div\", {\n        className: \"rfm-marquee\",\n        style: marqueeStyle\n    }, multiplyChildren(multiplier)));\n});\nexports[\"default\"] = Marquee; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZmFzdC1tYXJxdWVlL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUdBLFNBQVNBLGdCQUFnQkMsR0FBRztJQUN4QixJQUFJLENBQUNBLE9BQU8sZ0JBQWtCLGFBQWE7UUFDdkM7SUFDSjtJQUNBLE1BQU1DLFFBQVFDLFNBQVNDLGFBQWEsQ0FBQztJQUNyQ0YsTUFBTUcsWUFBWSxDQUFDLFFBQVE7SUFDM0JILE1BQU1JLFNBQVMsR0FBR0w7SUFDbEJFLFNBQVNJLElBQUksQ0FBQ0MsV0FBVyxDQUFDTjtJQUMxQixPQUFPRDtBQUNYO0FBRUFRLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELElBQUlDLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLFNBQVNDLHNCQUF1QkMsQ0FBQztJQUFJLE9BQU9BLEtBQUssT0FBT0EsTUFBTSxZQUFZLGFBQWFBLElBQUlBLElBQUk7UUFBRSxXQUFXQTtJQUFFO0FBQUc7QUFFakgsSUFBSUMsaUJBQWlCLFdBQVcsR0FBRUYsc0JBQXNCRjtBQUV4RGIsZ0JBQWdCO0FBRWhCLE1BQU1rQixVQUFVTCxNQUFNTSxVQUFVLENBQUMsU0FBU0QsUUFBUSxFQUFFaEIsUUFBUSxDQUFDLENBQUMsRUFBRWtCLFlBQVksRUFBRSxFQUFFQyxXQUFXLEtBQUssRUFBRUMsT0FBTyxJQUFJLEVBQUVDLGVBQWUsS0FBSyxFQUFFQyxlQUFlLEtBQUssRUFBRUMsWUFBWSxNQUFNLEVBQUVDLFFBQVEsRUFBRSxFQUFFQyxRQUFRLENBQUMsRUFBRUMsT0FBTyxDQUFDLEVBQUVDLFdBQVcsS0FBSyxFQUFFQyxnQkFBZ0IsT0FBTyxFQUFFQyxnQkFBZ0IsR0FBRyxFQUFFQyxRQUFRLEVBQUVDLGVBQWUsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUcsRUFBRUMsR0FBRztJQUNoVSxjQUFjO0lBQ2QsTUFBTSxDQUFDQyxnQkFBZ0JDLGtCQUFrQixHQUFHekIsTUFBTTBCLFFBQVEsQ0FB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O0FBQzNIO0FBRUEvQixrQkFBZSxHQUFHTyxTQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mMzU2Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhc3QtbWFycXVlZS9kaXN0L2luZGV4LmpzP2NjMjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuXG5mdW5jdGlvbiBfX18kaW5zZXJ0U3R5bGUoY3NzKSB7XG4gICAgaWYgKCFjc3MgfHwgdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQvY3NzJyk7XG4gICAgc3R5bGUuaW5uZXJIVE1MID0gY3NzO1xuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICAgIHJldHVybiBjc3M7XG59XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wRGVmYXVsdExlZ2FjeSAoZSkgeyByZXR1cm4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyAnZGVmYXVsdCc6IGUgfTsgfVxuXG52YXIgUmVhY3RfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KFJlYWN0KTtcblxuX19fJGluc2VydFN0eWxlKFwiLnJmbS1tYXJxdWVlLWNvbnRhaW5lciB7XFxuICBvdmVyZmxvdy14OiBoaWRkZW47XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiB2YXIoLS13aWR0aCk7XFxuICB0cmFuc2Zvcm06IHZhcigtLXRyYW5zZm9ybSk7XFxufVxcbi5yZm0tbWFycXVlZS1jb250YWluZXI6aG92ZXIgZGl2IHtcXG4gIGFuaW1hdGlvbi1wbGF5LXN0YXRlOiB2YXIoLS1wYXVzZS1vbi1ob3Zlcik7XFxufVxcbi5yZm0tbWFycXVlZS1jb250YWluZXI6YWN0aXZlIGRpdiB7XFxuICBhbmltYXRpb24tcGxheS1zdGF0ZTogdmFyKC0tcGF1c2Utb24tY2xpY2spO1xcbn1cXG5cXG4ucmZtLW92ZXJsYXkge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5yZm0tb3ZlcmxheTo6YmVmb3JlLCAucmZtLW92ZXJsYXk6OmFmdGVyIHtcXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgdmFyKC0tZ3JhZGllbnQtY29sb3IpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkpO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogdmFyKC0tZ3JhZGllbnQtd2lkdGgpO1xcbiAgei1pbmRleDogMjtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgdG91Y2gtYWN0aW9uOiBub25lO1xcbn1cXG4ucmZtLW92ZXJsYXk6OmFmdGVyIHtcXG4gIHJpZ2h0OiAwO1xcbiAgdG9wOiAwO1xcbiAgdHJhbnNmb3JtOiByb3RhdGVaKDE4MGRlZyk7XFxufVxcbi5yZm0tb3ZlcmxheTo6YmVmb3JlIHtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxufVxcblxcbi5yZm0tbWFycXVlZSB7XFxuICBmbGV4OiAwIDAgYXV0bztcXG4gIG1pbi13aWR0aDogdmFyKC0tbWluLXdpZHRoKTtcXG4gIHotaW5kZXg6IDE7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBhbmltYXRpb246IHNjcm9sbCB2YXIoLS1kdXJhdGlvbikgbGluZWFyIHZhcigtLWRlbGF5KSB2YXIoLS1pdGVyYXRpb24tY291bnQpO1xcbiAgYW5pbWF0aW9uLXBsYXktc3RhdGU6IHZhcigtLXBsYXkpO1xcbiAgYW5pbWF0aW9uLWRlbGF5OiB2YXIoLS1kZWxheSk7XFxuICBhbmltYXRpb24tZGlyZWN0aW9uOiB2YXIoLS1kaXJlY3Rpb24pO1xcbn1cXG5Aa2V5ZnJhbWVzIHNjcm9sbCB7XFxuICAwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwJSk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcXG4gIH1cXG59XFxuXFxuLnJmbS1pbml0aWFsLWNoaWxkLWNvbnRhaW5lciB7XFxuICBmbGV4OiAwIDAgYXV0bztcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBtaW4td2lkdGg6IGF1dG87XFxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLnJmbS1jaGlsZCB7XFxuICB0cmFuc2Zvcm06IHZhcigtLXRyYW5zZm9ybSk7XFxufVwiKTtcblxuY29uc3QgTWFycXVlZSA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gTWFycXVlZSh7IHN0eWxlID0ge30sIGNsYXNzTmFtZSA9IFwiXCIsIGF1dG9GaWxsID0gZmFsc2UsIHBsYXkgPSB0cnVlLCBwYXVzZU9uSG92ZXIgPSBmYWxzZSwgcGF1c2VPbkNsaWNrID0gZmFsc2UsIGRpcmVjdGlvbiA9IFwibGVmdFwiLCBzcGVlZCA9IDUwLCBkZWxheSA9IDAsIGxvb3AgPSAwLCBncmFkaWVudCA9IGZhbHNlLCBncmFkaWVudENvbG9yID0gXCJ3aGl0ZVwiLCBncmFkaWVudFdpZHRoID0gMjAwLCBvbkZpbmlzaCwgb25DeWNsZUNvbXBsZXRlLCBvbk1vdW50LCBjaGlsZHJlbiwgfSwgcmVmKSB7XHJcbiAgICAvLyBSZWFjdCBIb29rc1xyXG4gICAgY29uc3QgW2NvbnRhaW5lcldpZHRoLCBzZXRDb250YWluZXJXaWR0aF0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFttYXJxdWVlV2lkdGgsIHNldE1hcnF1ZWVXaWR0aF0gPSBSZWFjdC51c2VTdGF0ZSgwKTtcclxuICAgIGNvbnN0IFttdWx0aXBsaWVyLCBzZXRNdWx0aXBsaWVyXSA9IFJlYWN0LnVzZVN0YXRlKDEpO1xyXG4gICAgY29uc3QgW2lzTW91bnRlZCwgc2V0SXNNb3VudGVkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IHJvb3RSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XHJcbiAgICBjb25zdCBjb250YWluZXJSZWYgPSByZWYgfHwgcm9vdFJlZjtcclxuICAgIGNvbnN0IG1hcnF1ZWVSZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XHJcbiAgICAvLyBDYWxjdWxhdGUgd2lkdGggb2YgY29udGFpbmVyIGFuZCBtYXJxdWVlIGFuZCBzZXQgbXVsdGlwbGllclxyXG4gICAgY29uc3QgY2FsY3VsYXRlV2lkdGggPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICAgICAgaWYgKG1hcnF1ZWVSZWYuY3VycmVudCAmJiBjb250YWluZXJSZWYuY3VycmVudCkge1xyXG4gICAgICAgICAgICBjb25zdCBjb250YWluZXJSZWN0ID0gY29udGFpbmVyUmVmLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG1hcnF1ZWVSZWN0ID0gbWFycXVlZVJlZi5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgICAgICAgICBsZXQgY29udGFpbmVyV2lkdGggPSBjb250YWluZXJSZWN0LndpZHRoO1xyXG4gICAgICAgICAgICBsZXQgbWFycXVlZVdpZHRoID0gbWFycXVlZVJlY3Qud2lkdGg7XHJcbiAgICAgICAgICAgIC8vIFN3YXAgd2lkdGggYW5kIGhlaWdodCBpZiBkaXJlY3Rpb24gaXMgdXAgb3IgZG93blxyXG4gICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09PSBcInVwXCIgfHwgZGlyZWN0aW9uID09PSBcImRvd25cIikge1xyXG4gICAgICAgICAgICAgICAgY29udGFpbmVyV2lkdGggPSBjb250YWluZXJSZWN0LmhlaWdodDtcclxuICAgICAgICAgICAgICAgIG1hcnF1ZWVXaWR0aCA9IG1hcnF1ZWVSZWN0LmhlaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoYXV0b0ZpbGwgJiYgY29udGFpbmVyV2lkdGggJiYgbWFycXVlZVdpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRNdWx0aXBsaWVyKG1hcnF1ZWVXaWR0aCA8IGNvbnRhaW5lcldpZHRoXHJcbiAgICAgICAgICAgICAgICAgICAgPyBNYXRoLmNlaWwoY29udGFpbmVyV2lkdGggLyBtYXJxdWVlV2lkdGgpXHJcbiAgICAgICAgICAgICAgICAgICAgOiAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHNldE11bHRpcGxpZXIoMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2V0Q29udGFpbmVyV2lkdGgoY29udGFpbmVyV2lkdGgpO1xyXG4gICAgICAgICAgICBzZXRNYXJxdWVlV2lkdGgobWFycXVlZVdpZHRoKTtcclxuICAgICAgICB9XHJcbiAgICB9LCBbYXV0b0ZpbGwsIGNvbnRhaW5lclJlZiwgZGlyZWN0aW9uXSk7XHJcbiAgICAvLyBDYWxjdWxhdGUgd2lkdGggYW5kIG11bHRpcGxpZXIgb24gbW91bnQgYW5kIG9uIHdpbmRvdyByZXNpemVcclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKCFpc01vdW50ZWQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBjYWxjdWxhdGVXaWR0aCgpO1xyXG4gICAgICAgIGlmIChtYXJxdWVlUmVmLmN1cnJlbnQgJiYgY29udGFpbmVyUmVmLmN1cnJlbnQpIHtcclxuICAgICAgICAgICAgY29uc3QgcmVzaXplT2JzZXJ2ZXIgPSBuZXcgUmVzaXplT2JzZXJ2ZXIoKCkgPT4gY2FsY3VsYXRlV2lkdGgoKSk7XHJcbiAgICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLm9ic2VydmUoY29udGFpbmVyUmVmLmN1cnJlbnQpO1xyXG4gICAgICAgICAgICByZXNpemVPYnNlcnZlci5vYnNlcnZlKG1hcnF1ZWVSZWYuY3VycmVudCk7XHJcbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXJlc2l6ZU9ic2VydmVyKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIHJlc2l6ZU9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICB9LCBbY2FsY3VsYXRlV2lkdGgsIGNvbnRhaW5lclJlZiwgaXNNb3VudGVkXSk7XHJcbiAgICAvLyBSZWNhbGN1bGF0ZSB3aWR0aCB3aGVuIGNoaWxkcmVuIGNoYW5nZVxyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBjYWxjdWxhdGVXaWR0aCgpO1xyXG4gICAgfSwgW2NhbGN1bGF0ZVdpZHRoLCBjaGlsZHJlbl0pO1xyXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBzZXRJc01vdW50ZWQodHJ1ZSk7XHJcbiAgICB9LCBbXSk7XHJcbiAgICAvLyBSdW5zIHRoZSBvbk1vdW50IGNhbGxiYWNrLCBpZiBpdCBpcyBhIGZ1bmN0aW9uLCB3aGVuIE1hcnF1ZWUgaXMgbW91bnRlZC5cclxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBvbk1vdW50ID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgb25Nb3VudCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0sIFtdKTtcclxuICAgIC8vIEFuaW1hdGlvbiBkdXJhdGlvblxyXG4gICAgY29uc3QgZHVyYXRpb24gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcclxuICAgICAgICBpZiAoYXV0b0ZpbGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChtYXJxdWVlV2lkdGggKiBtdWx0aXBsaWVyKSAvIHNwZWVkO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1hcnF1ZWVXaWR0aCA8IGNvbnRhaW5lcldpZHRoXHJcbiAgICAgICAgICAgICAgICA/IGNvbnRhaW5lcldpZHRoIC8gc3BlZWRcclxuICAgICAgICAgICAgICAgIDogbWFycXVlZVdpZHRoIC8gc3BlZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW2F1dG9GaWxsLCBjb250YWluZXJXaWR0aCwgbWFycXVlZVdpZHRoLCBtdWx0aXBsaWVyLCBzcGVlZF0pO1xyXG4gICAgY29uc3QgY29udGFpbmVyU3R5bGUgPSBSZWFjdC51c2VNZW1vKCgpID0+IChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHN0eWxlKSwgeyBbXCItLXBhdXNlLW9uLWhvdmVyXCJdOiAhcGxheSB8fCBwYXVzZU9uSG92ZXIgPyBcInBhdXNlZFwiIDogXCJydW5uaW5nXCIsIFtcIi0tcGF1c2Utb24tY2xpY2tcIl06ICFwbGF5IHx8IChwYXVzZU9uSG92ZXIgJiYgIXBhdXNlT25DbGljaykgfHwgcGF1c2VPbkNsaWNrXHJcbiAgICAgICAgICAgID8gXCJwYXVzZWRcIlxyXG4gICAgICAgICAgICA6IFwicnVubmluZ1wiLCBbXCItLXdpZHRoXCJdOiBkaXJlY3Rpb24gPT09IFwidXBcIiB8fCBkaXJlY3Rpb24gPT09IFwiZG93blwiID8gYDEwMHZoYCA6IFwiMTAwJVwiLCBbXCItLXRyYW5zZm9ybVwiXTogZGlyZWN0aW9uID09PSBcInVwXCJcclxuICAgICAgICAgICAgPyBcInJvdGF0ZSgtOTBkZWcpXCJcclxuICAgICAgICAgICAgOiBkaXJlY3Rpb24gPT09IFwiZG93blwiXHJcbiAgICAgICAgICAgICAgICA/IFwicm90YXRlKDkwZGVnKVwiXHJcbiAgICAgICAgICAgICAgICA6IFwibm9uZVwiIH0pKSwgW3N0eWxlLCBwbGF5LCBwYXVzZU9uSG92ZXIsIHBhdXNlT25DbGljaywgZGlyZWN0aW9uXSk7XHJcbiAgICBjb25zdCBncmFkaWVudFN0eWxlID0gUmVhY3QudXNlTWVtbygoKSA9PiAoe1xyXG4gICAgICAgIFtcIi0tZ3JhZGllbnQtY29sb3JcIl06IGdyYWRpZW50Q29sb3IsXHJcbiAgICAgICAgW1wiLS1ncmFkaWVudC13aWR0aFwiXTogdHlwZW9mIGdyYWRpZW50V2lkdGggPT09IFwibnVtYmVyXCJcclxuICAgICAgICAgICAgPyBgJHtncmFkaWVudFdpZHRofXB4YFxyXG4gICAgICAgICAgICA6IGdyYWRpZW50V2lkdGgsXHJcbiAgICB9KSwgW2dyYWRpZW50Q29sb3IsIGdyYWRpZW50V2lkdGhdKTtcclxuICAgIGNvbnN0IG1hcnF1ZWVTdHlsZSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcclxuICAgICAgICBbXCItLXBsYXlcIl06IHBsYXkgPyBcInJ1bm5pbmdcIiA6IFwicGF1c2VkXCIsXHJcbiAgICAgICAgW1wiLS1kaXJlY3Rpb25cIl06IGRpcmVjdGlvbiA9PT0gXCJsZWZ0XCIgPyBcIm5vcm1hbFwiIDogXCJyZXZlcnNlXCIsXHJcbiAgICAgICAgW1wiLS1kdXJhdGlvblwiXTogYCR7ZHVyYXRpb259c2AsXHJcbiAgICAgICAgW1wiLS1kZWxheVwiXTogYCR7ZGVsYXl9c2AsXHJcbiAgICAgICAgW1wiLS1pdGVyYXRpb24tY291bnRcIl06ICEhbG9vcCA/IGAke2xvb3B9YCA6IFwiaW5maW5pdGVcIixcclxuICAgICAgICBbXCItLW1pbi13aWR0aFwiXTogYXV0b0ZpbGwgPyBgYXV0b2AgOiBcIjEwMCVcIixcclxuICAgIH0pLCBbcGxheSwgZGlyZWN0aW9uLCBkdXJhdGlvbiwgZGVsYXksIGxvb3AsIGF1dG9GaWxsXSk7XHJcbiAgICBjb25zdCBjaGlsZFN0eWxlID0gUmVhY3QudXNlTWVtbygoKSA9PiAoe1xyXG4gICAgICAgIFtcIi0tdHJhbnNmb3JtXCJdOiBkaXJlY3Rpb24gPT09IFwidXBcIlxyXG4gICAgICAgICAgICA/IFwicm90YXRlKDkwZGVnKVwiXHJcbiAgICAgICAgICAgIDogZGlyZWN0aW9uID09PSBcImRvd25cIlxyXG4gICAgICAgICAgICAgICAgPyBcInJvdGF0ZSgtOTBkZWcpXCJcclxuICAgICAgICAgICAgICAgIDogXCJub25lXCIsXHJcbiAgICB9KSwgW2RpcmVjdGlvbl0pO1xyXG4gICAgLy8gUmVuZGVyIHttdWx0aXBsaWVyfSBudW1iZXIgb2YgY2hpbGRyZW5cclxuICAgIGNvbnN0IG11bHRpcGx5Q2hpbGRyZW4gPSBSZWFjdC51c2VDYWxsYmFjaygobXVsdGlwbGllcikgPT4ge1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIC4uLkFycmF5KE51bWJlci5pc0Zpbml0ZShtdWx0aXBsaWVyKSAmJiBtdWx0aXBsaWVyID49IDAgPyBtdWx0aXBsaWVyIDogMCksXHJcbiAgICAgICAgXS5tYXAoKF8sIGkpID0+IChSZWFjdF9fZGVmYXVsdFsnZGVmYXVsdCddLmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIHsga2V5OiBpIH0sIFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3RfX2RlZmF1bHRbJ2RlZmF1bHQnXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IGNoaWxkU3R5bGUsIGNsYXNzTmFtZTogXCJyZm0tY2hpbGRcIiB9LCBjaGlsZCkpO1xyXG4gICAgICAgIH0pKSkpO1xyXG4gICAgfSwgW2NoaWxkU3R5bGUsIGNoaWxkcmVuXSk7XHJcbiAgICByZXR1cm4gIWlzTW91bnRlZCA/IG51bGwgOiAoUmVhY3RfX2RlZmF1bHRbJ2RlZmF1bHQnXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgcmVmOiBjb250YWluZXJSZWYsIHN0eWxlOiBjb250YWluZXJTdHlsZSwgY2xhc3NOYW1lOiBcInJmbS1tYXJxdWVlLWNvbnRhaW5lciBcIiArIGNsYXNzTmFtZSB9LFxyXG4gICAgICAgIGdyYWRpZW50ICYmIFJlYWN0X19kZWZhdWx0WydkZWZhdWx0J10uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBncmFkaWVudFN0eWxlLCBjbGFzc05hbWU6IFwicmZtLW92ZXJsYXlcIiB9KSxcclxuICAgICAgICBSZWFjdF9fZGVmYXVsdFsnZGVmYXVsdCddLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmZtLW1hcnF1ZWVcIiwgc3R5bGU6IG1hcnF1ZWVTdHlsZSwgb25BbmltYXRpb25JdGVyYXRpb246IG9uQ3ljbGVDb21wbGV0ZSwgb25BbmltYXRpb25FbmQ6IG9uRmluaXNoIH0sXHJcbiAgICAgICAgICAgIFJlYWN0X19kZWZhdWx0WydkZWZhdWx0J10uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZm0taW5pdGlhbC1jaGlsZC1jb250YWluZXJcIiwgcmVmOiBtYXJxdWVlUmVmIH0sIFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgKGNoaWxkKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0X19kZWZhdWx0WydkZWZhdWx0J10uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiBjaGlsZFN0eWxlLCBjbGFzc05hbWU6IFwicmZtLWNoaWxkXCIgfSwgY2hpbGQpKTtcclxuICAgICAgICAgICAgfSkpLFxyXG4gICAgICAgICAgICBtdWx0aXBseUNoaWxkcmVuKG11bHRpcGxpZXIgLSAxKSksXHJcbiAgICAgICAgUmVhY3RfX2RlZmF1bHRbJ2RlZmF1bHQnXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJmbS1tYXJxdWVlXCIsIHN0eWxlOiBtYXJxdWVlU3R5bGUgfSwgbXVsdGlwbHlDaGlsZHJlbihtdWx0aXBsaWVyKSkpKTtcclxufSk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE1hcnF1ZWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJfX18kaW5zZXJ0U3R5bGUiLCJjc3MiLCJzdHlsZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImlubmVySFRNTCIsImhlYWQiLCJhcHBlbmRDaGlsZCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUmVhY3QiLCJyZXF1aXJlIiwiX2ludGVyb3BEZWZhdWx0TGVnYWN5IiwiZSIsIlJlYWN0X19kZWZhdWx0IiwiTWFycXVlZSIsImZvcndhcmRSZWYiLCJjbGFzc05hbWUiLCJhdXRvRmlsbCIsInBsYXkiLCJwYXVzZU9uSG92ZXIiLCJwYXVzZU9uQ2xpY2siLCJkaXJlY3Rpb24iLCJzcGVlZCIsImRlbGF5IiwibG9vcCIsImdyYWRpZW50IiwiZ3JhZGllbnRDb2xvciIsImdyYWRpZW50V2lkdGgiLCJvbkZpbmlzaCIsIm9uQ3ljbGVDb21wbGV0ZSIsIm9uTW91bnQiLCJjaGlsZHJlbiIsInJlZiIsImNvbnRhaW5lcldpZHRoIiwic2V0Q29udGFpbmVyV2lkdGgiLCJ1c2VTdGF0ZSIsIm1hcnF1ZWVXaWR0aCIsInNldE1hcnF1ZWVXaWR0aCIsIm11bHRpcGxpZXIiLCJzZXRNdWx0aXBsaWVyIiwiaXNNb3VudGVkIiwic2V0SXNNb3VudGVkIiwicm9vdFJlZiIsInVzZVJlZiIsImNvbnRhaW5lclJlZiIsIm1hcnF1ZWVSZWYiLCJjYWxjdWxhdGVXaWR0aCIsInVzZUNhbGxiYWNrIiwiY3VycmVudCIsImNvbnRhaW5lclJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJtYXJxdWVlUmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwiTWF0aCIsImNlaWwiLCJ1c2VFZmZlY3QiLCJyZXNpemVPYnNlcnZlciIsIlJlc2l6ZU9ic2VydmVyIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJkdXJhdGlvbiIsInVzZU1lbW8iLCJjb250YWluZXJTdHlsZSIsImFzc2lnbiIsImdyYWRpZW50U3R5bGUiLCJtYXJxdWVlU3R5bGUiLCJjaGlsZFN0eWxlIiwibXVsdGlwbHlDaGlsZHJlbiIsIkFycmF5IiwiTnVtYmVyIiwiaXNGaW5pdGUiLCJtYXAiLCJfIiwiaSIsIkZyYWdtZW50Iiwia2V5IiwiQ2hpbGRyZW4iLCJjaGlsZCIsIm9uQW5pbWF0aW9uSXRlcmF0aW9uIiwib25BbmltYXRpb25FbmQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-fast-marquee/dist/index.js\n");

/***/ })

};
;